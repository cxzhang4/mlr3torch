% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpTaskPreprocTorch.R
\name{pipeop_preproc_torch}
\alias{pipeop_preproc_torch}
\title{Create a Torch Preprocessing PipeOp}
\usage{
pipeop_preproc_torch(
  id,
  fn,
  shapes_out = NULL,
  param_set = NULL,
  packages = character(),
  per_column = TRUE
)
}
\arguments{
\item{id}{(\code{character(1)})\cr
The ID of the \code{PipeOp}.}

\item{fn}{(\code{function})\cr
The preprocessing function.}

\item{shapes_out}{(\verb{function()} or \code{NULL})
Will be set as private \verb{$.shapes_out()} method.
Can be left as \code{NULL} if the operation does not modify the shapes.}

\item{param_set}{(\code{ParamSet} or \code{NULL})\cr
The parameter set of the \code{PipeOp}.
If left as \code{NULL}, parameters of type \code{\link{ParamUty}} will be created for all but the first argument
of function \code{fn}. They will have both tags \code{"train"} and \code{"predict"}.}

\item{packages}{(\code{character()})\cr
The packages the \code{PipeOp} depends on.}

\item{per_column}{(\code{logical(1)})\cr
Whether the preprecessing is applied column-wise.}
}
\value{
\code{\link{R6Class}} instance inheriting ess_torchfrom \code{\link{PipeOpTaskPreprocTorch}}
}
\description{
Utility function that makes implementing preprocessing pipeops easier.
You should read the documentation of \code{\link{PipeOpTaskPreprocTorch}} first.
}
\examples{
po_device = pipeop_preproc_torch("to_device",
  function(x, device) x$to(device = device)
)
po_device$param_set
}
